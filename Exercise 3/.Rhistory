y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[2]), cov.model = "matern", kappa = 2)
p <- p + geom_line(aes(x = x, y= y), data = as.data.frame(cbind(x,y)), col = colors[2])
p <- p + ggtitle(TeX("Matern covariance, $\\sigma^2_r\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p <- p +  scale_colour_manual("", breaks = TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1]))),
values = c("red", "green"))
p
unname(TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1]))))
p <- p +  scale_colour_manual("", labels = unname(TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1])))),
values = c("red", "green"))
p <- ggplot() + geom_line(aes(x = x, y= y), data = as.data.frame(cbind(x,y)), col = colors[1])
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[2]), cov.model = "matern", kappa = 2)
p <- p + geom_line(aes(x = x, y= y), data = as.data.frame(cbind(x,y)), col = colors[2])
p <- p + ggtitle(TeX("Matern covariance, $\\sigma^2_r\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p <- p +  scale_colour_manual("", labels = unname(TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1])))),
values = c("red", "green"))
p
p <- p +  scale_colour_manual(labels = unname(TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1])))))
p <- p +
scale_color_discrete(labels = unname(TeX(c("$A_{t-k}^h", "$B_{t-k}^h"))))
p <- ggplot() + geom_line(aes(x = x, y= y,col = colors[1]), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[2]), cov.model = "matern", kappa = 2)
p <- p + geom_line(aes(x = x, y= y), data = as.data.frame(cbind(x,y)), col = colors[2])
p <- p + ggtitle(TeX("Matern covariance, $\\sigma^2_r\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p <- p +
scale_color_discrete(labels = unname(TeX(c("$A_{t-k}^h", "$B_{t-k}^h"))))
scale_colour_manual(labels = unname(TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1])))))
p
TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1])))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[1]), cov.model = "matern", kappa = 2)
p <- ggplot() + geom_line(aes(x = x, y= y,col = colors[1]), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[2]), cov.model = "matern", kappa = 2)
p <- p + geom_line(aes(x = x, y= y), data = as.data.frame(cbind(x,y)), col = colors[2])
p <- p + ggtitle(TeX("Matern covariance, $\\sigma^2_r\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p <- p +
scale_color_discrete(labels = unname(TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1])))))
p
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[1]), cov.model = "matern", kappa = 2)
p <- ggplot() + geom_line(aes(x = x, y= y,col = colors[1]), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[2]), cov.model = "matern", kappa = 2)
p <- p + geom_line(aes(x = x, y= y, col = colors[2]), data = as.data.frame(cbind(x,y)))
p <- p + ggtitle(TeX("Matern covariance, $\\sigma^2_r\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p <- p +
scale_color_discrete(labels = unname(TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1])))))
p
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[1]), cov.model = "matern", kappa = 2)
p <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[2]), cov.model = "matern", kappa = 2)
p <- p + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p <- p + ggtitle(TeX("Matern covariance, $\\sigma^2_r\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p <- p +
scale_color_discrete(labels = unname(TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1])))))
p
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[1]), cov.model = "matern", kappa = 2)
p <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[2]), cov.model = "matern", kappa = 2)
p <- p + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p <- p + ggtitle(TeX("Matern covariance, $\\sigma^2_r\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p <- p +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1])))))
p
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[1]), cov.model = "matern", kappa = 2)
p <- ggplot() + geom_line(aes(x = x, y= y,col = "red", linetype = 2), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[2]), cov.model = "matern", kappa = 2)
p <- p + geom_line(aes(x = x, y= y, col = "blue", linetype = 1), data = as.data.frame(cbind(x,y)))
p <- p + ggtitle(TeX("Matern covariance, $\\sigma^2_r\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p <- p +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1])))))
p
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[1]), cov.model = "matern", kappa = 2)
p <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[2]), cov.model = "matern", kappa = 2)
p <- p + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p <- p + ggtitle(TeX("Matern covariance, $\\sigma^2_r\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p <- p +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1])))))
p
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[1]), cov.model = "matern", kappa = 2)
p <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[2]), cov.model = "matern", kappa = 2)
p <- p + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p <- p + ggtitle(TeX("Matern covariance, $\\sigma^2_r\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p <- p +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1]))))) +
theme(legend.position="top")
p
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[1]), cov.model = "matern", kappa = 2)
p <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[2]), cov.model = "matern", kappa = 2)
p <- p + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p <- p + ggtitle(TeX("Matern covariance, $\\sigma^2_r\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p <- p +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1])))))
p
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[1]), cov.model = "matern", kappa = 2)
p <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[2]), cov.model = "matern", kappa = 2)
p <- p + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p <- p + ggtitle(TeX("Matern covariance, $\\sigma^2_r\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p <- p +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1]))))) +
theme(legend.key.size = unit(1.5, 'lines'))
p
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[1]), cov.model = "matern", kappa = 2)
p <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[2]), cov.model = "matern", kappa = 2)
p <- p + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p <- p + ggtitle(TeX("Matern covariance, $\\sigma^2_r\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p <- p +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1]))))) +
theme(legend.key.size = unit(1.5, 'lines'),
legend.position = 'bottom'
)
p
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[1]), cov.model = "matern", kappa = 2)
p <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[2]), cov.model = "matern", kappa = 2)
p <- p + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p <- p + ggtitle(TeX("Matern covariance, $\\sigma^2_r\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p <- p +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1]))))) +
theme(legend.key.size = unit(1.5, 'lines'),
legend.position = 'bottom',
text = element_text(size=20))
p
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[1]), cov.model = "matern", kappa = 2)
p <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.matern[2]), cov.model = "matern", kappa = 2)
p <- p + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p <- p + ggtitle(TeX("Matern covariance, $\\sigma^2_r\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p <- p +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.matern[1])
,paste("$\\nu =$", vs.matern[2]))))) +
theme(legend.key.size = unit(1.5, 'lines'),
legend.position = 'bottom',
text = element_text(size=20))
p
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[1]), cov.model = "exponential", kappa = 2)
p2 <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[2]), cov.model = "matern", kappa = 2)
p2 <- p2 + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p2 <- p2 + ggtitle(TeX("Powered exponential correlation, $\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p2 <- p2 +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.exponential[1])
,paste("$\\nu =$", vs.exponential[2]))))) +
theme(legend.key.size = unit(1.5, 'lines'),
legend.position = 'bottom',
text = element_text(size=20))
p2
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[1]), cov.model = "exponential", kappa = 2)
p2 <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[2]), cov.model = "matern", kappa = 2)
p2 <- p2 + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p2 <- p2 + ggtitle(TeX("Powered exponential correlation, $\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p2 <- p2 +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.exponential[1])
,paste("$\\nu =$", vs.exponential[2]))))) +
theme(legend.key.size = unit(1.5, 'lines'),
legend.position = 'bottom',
text = element_text(size=20)) +
guide_legend(keywidth = 0.1)
p2
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[1]), cov.model = "exponential", kappa = 2)
p2 <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[2]), cov.model = "matern", kappa = 2)
p2 <- p2 + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p2 <- p2 + ggtitle(TeX("Powered exponential correlation, $\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p2 <- p2 +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.exponential[1])
,paste("$\\nu =$", vs.exponential[2])))),
guide = guide_legend(label.vjust = 0.1)) +
theme(legend.key.size = unit(1.5, 'lines'),
legend.position = 'bottom',
text = element_text(size=20))
p2
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[1]), cov.model = "exponential", kappa = 2)
p2 <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[2]), cov.model = "matern", kappa = 2)
p2 <- p2 + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p2 <- p2 + ggtitle(TeX("Powered exponential correlation, $\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p2 <- p2 +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.exponential[1])
,paste("$\\nu =$", vs.exponential[2])))),
guide = guide_legend(label.hjust = 0.1)) +
theme(legend.key.size = unit(1.5, 'lines'),
legend.position = 'bottom',
text = element_text(size=20))
p2
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[1]), cov.model = "exponential", kappa = 2)
p2 <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[2]), cov.model = "matern", kappa = 2)
p2 <- p2 + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p2 <- p2 + ggtitle(TeX("Powered exponential correlation, $\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p2 <- p2 +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.exponential[1])
,paste("$\\nu =$", vs.exponential[2])))),
guide = guide_legend(label.hjust = 0.1)) +
theme(legend.key.size = unit(1.5, 'lines'),
legend.position = 'right',
text = element_text(size=20))
p2
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[1]), cov.model = "exponential", kappa = 2)
p2 <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[2]), cov.model = "matern", kappa = 2)
p2 <- p2 + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p2 <- p2 + ggtitle(TeX("Powered exponential correlation, $\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p2 <- p2 +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.exponential[1])
,paste("$\\nu =$", vs.exponential[2])))),
guide = guide_legend(label.hjust = 0.1)) +
theme(legend.key.size = unit(1.5, 'lines'),
legend.position = 'right',
text = element_text(size=20),
legend.title = element_blank(),
legend.spacing.y = unit(0, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
aspect.ratio = 1, axis.text = element_text(colour = 1, size = 12),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
theme_classic()
p2
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[1]), cov.model = "exponential", kappa = 2)
p2 <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[2]), cov.model = "matern", kappa = 2)
p2 <- p2 + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p2 <- p2 + ggtitle(TeX("Powered exponential correlation, $\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p2 <- p2 +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.exponential[1])
,paste("$\\nu =$", vs.exponential[2])))),
guide = guide_legend(label.hjust = 0.1)) +
theme_classic() +
theme(legend.key.size = unit(1.5, 'lines'),
legend.position = 'right',
text = element_text(size=20),
legend.title = element_blank(),
legend.spacing.y = unit(0, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
aspect.ratio = 1, axis.text = element_text(colour = 1, size = 12),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
p2
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[1]), cov.model = "exponential", kappa = 2)
p2 <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[2]), cov.model = "matern", kappa = 2)
p2 <- p2 + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p2 <- p2 + ggtitle(TeX("Powered exponential correlation, $\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p2 <- p2 +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.exponential[1])
,paste("$\\nu =$", vs.exponential[2])))),
guide = guide_legend(label.hjust = 0.1)) +
theme_classic() +
theme(legend.key.size = unit(1.5, 'lines'),
legend.position = 'right',
text = element_text(size=20),
legend.title = element_blank(),
legend.spacing.y = unit(0, "mm"),
panel.border = element_rect(colour = "black", fill=NA),
aspect.ratio = 1, axis.text = element_text(colour = 1, size = 12),
legend.background = element_blank(),
legend.box.margin = 2,
legend.box.background = element_rect(colour = "black"))
p2
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[1]), cov.model = "exponential", kappa = 2)
p2 <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- cov.spatial(x, cov.pars=c(sigma2s[1], vs.exponential[2]), cov.model = "matern", kappa = 2)
p2 <- p2 + geom_line(aes(x = x, y= y, col = "blue"), data = as.data.frame(cbind(x,y)))
p2 <- p2 + ggtitle(TeX("Powered exponential correlation, $\\rho_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\rho_r(\\tau)$"))
p2 <- p2 +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.exponential[1])
,paste("$\\nu =$", vs.exponential[2])))),
guide = guide_legend(label.hjust = 0.1)) +
theme_classic() +
theme(legend.key.size = unit(1.5, 'lines'),
legend.position = 'right',
text = element_text(size=20),
legend.title = element_blank(),
legend.spacing.y = unit(0, "mm"))
p2
y <- sigma2s[1]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[1]), cov.model = "matern", kappa = 2))
p3 <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[1]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[2]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[2]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[1]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[2]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[2]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
p3
y <- sigma2s[1]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[1]), cov.model = "matern", kappa = 2))
p3 <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[1]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[2]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[2]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[1]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "blue"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[2]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[2]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "blue"), data = as.data.frame(cbind(x,y)))
p3 <- p3 + ggtitle(TeX("Matern variogram, $\\\gamma_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\gamma_r(\\tau)$"))
p3
y <- sigma2s[1]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[1]), cov.model = "matern", kappa = 2))
p3 <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[1]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[2]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "purple"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[2]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[1]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "blue"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[2]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[2]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "skyblue"), data = as.data.frame(cbind(x,y)))
p3 <- p3 + ggtitle(TeX("Matern variogram, $\\\gamma_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\gamma_r(\\tau)$"))
y <- sigma2s[1]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[1]), cov.model = "matern", kappa = 2))
p3 <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[1]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[2]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "purple"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[2]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[1]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "blue"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[2]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[2]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "skyblue"), data = as.data.frame(cbind(x,y)))
p3 <- p3 + ggtitle(TeX("Matern variogram, $\\\gamma_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\gamma_r(\\tau)$"))
p3
y <- sigma2s[1]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[1]), cov.model = "matern", kappa = 2))
p3 <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[1]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[2]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)), linetype = "dashed")
y <- sigma2s[2]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[1]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "blue"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[2]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[2]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "blue"), data = as.data.frame(cbind(x,y)), linetype = "dashed")
p3 <- p3 + ggtitle(TeX("Matern variogram, $\\gamma_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\gamma_r(\\tau)$"))
p3
y <- sigma2s[1]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[1]), cov.model = "matern", kappa = 2))
p3 <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[1]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[2]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)), linetype = "dashed")
y <- sigma2s[2]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[1]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "blue"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[2]*(1- cov.spatial(x, cov.pars=c(1, vs.matern[2]), cov.model = "matern", kappa = 2))
p3 <- p3 + geom_line(aes(x = x, y= y,col = "blue"), data = as.data.frame(cbind(x,y)), linetype = "dashed")
p3 <- p3 + ggtitle(TeX("Matern variogram, $\\gamma_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\gamma_r(\\tau)$")) +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.matern[1], ", $\\sigma^2 =$",sigma2s[2])
,paste("$\\nu =$", vs.matern[2], ", $\\sigma^2 =$",sigma2s[2])))),
guide = guide_legend(label.hjust = 0.1)) +
theme_classic() +
theme(legend.key.size = unit(1.5, 'lines'),
legend.position = 'right',
text = element_text(size=20),
legend.title = element_blank(),
legend.spacing.y = unit(0, "mm"))
p3
y <- sigma2s[1]*(1- cov.spatial(x, cov.pars=c(1, vs.exponential[1]), cov.model = "exponential", kappa = 2))
p4 <- ggplot() + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[1]*(1- cov.spatial(x, cov.pars=c(1, vs.exponential[2]), cov.model = "exponential", kappa = 2))
p4 <- p4 + geom_line(aes(x = x, y= y,col = "red"), data = as.data.frame(cbind(x,y)), linetype = "dashed")
y <- sigma2s[2]*(1- cov.spatial(x, cov.pars=c(1, vs.exponential[1]), cov.model = "exponential", kappa = 2))
p4 <- p4 + geom_line(aes(x = x, y= y,col = "blue"), data = as.data.frame(cbind(x,y)))
y <- sigma2s[2]*(1- cov.spatial(x, cov.pars=c(1, vs.exponential[2]), cov.model = "exponential", kappa = 2))
p4 <- p4 + geom_line(aes(x = x, y= y,col = "blue"), data = as.data.frame(cbind(x,y)), linetype = "dashed")
p4 <- p4 + ggtitle(TeX("Powered exponential variogram, $\\gamma_r(\\tau)$")) + xlab(TeX("$\\tau$")) + ylab(TeX("$\\gamma_r(\\tau)$")) +
scale_color_discrete("",labels = unname(TeX(c(paste("$\\nu =$", vs.exponential[1], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.exponential[2], ", $\\sigma^2 =$",sigma2s[1])
,paste("$\\nu =$", vs.exponential[1], ", $\\sigma^2 =$",sigma2s[2])
,paste("$\\nu =$", vs.exponential[2], ", $\\sigma^2 =$",sigma2s[2])))),
guide = guide_legend(label.hjust = 0.1)) +
theme_classic() +
theme(legend.key.size = unit(1.5, 'lines'),
legend.position = 'right',
text = element_text(size=20),
legend.title = element_blank(),
legend.spacing.y = unit(0, "mm"))
p4
xx
xx
n.realizations <- function(n, xx, sigma2, phi, cov.model, kappa = 2, title = "title"){
# Create covariance matrix
cov.matrix = cov.matr(xx, xx, sigma2, phi, cov.model, kappa)
# Expected value
mu = rep(0, length(xx))
# Draw from multivariate normal
draw <- MASS::mvrnorm(n = n, mu = mu, Sigma = cov.matrix)
# Transform the data
draw <- t(draw)
draw <- cbind(xx, draw)
observations <- Reduce(rbind, lapply(2:ncol(draw), function(col) cbind(draw[,c(1, col)], col)))
observations <- as.data.frame(observations)
colnames(observations) <- c("x", "observed_value", "trial")
observations$trial <- as.factor(observations$trial)
# Plot the data
pl <- ggplot()
pl + geom_line(data = observations, aes(x = x, y = observed_value, color = trial)) + ggtitle(Tex(paste(title, "$\\nu =$", phi, ", $\\sigma^2 =$",sigma2)))
pl
}
n <- 4
p1 <- n.realizations(n, xx, sigma2s[1], vs.matern[1], cov.model = "matern", kappa = 2, title = "Matern realizations")
n.realizations <- function(n, xx, sigma2, phi, cov.model, kappa = 2, title = "title"){
# Create covariance matrix
cov.matrix = cov.matr(xx, xx, sigma2, phi, cov.model, kappa)
# Expected value
mu = rep(0, length(xx))
# Draw from multivariate normal
draw <- MASS::mvrnorm(n = n, mu = mu, Sigma = cov.matrix)
# Transform the data
draw <- t(draw)
draw <- cbind(xx, draw)
observations <- Reduce(rbind, lapply(2:ncol(draw), function(col) cbind(draw[,c(1, col)], col)))
observations <- as.data.frame(observations)
colnames(observations) <- c("x", "observed_value", "trial")
observations$trial <- as.factor(observations$trial)
# Plot the data
pl <- ggplot()
pl + geom_line(data = observations, aes(x = x, y = observed_value, color = trial)) + ggtitle(TeX(paste(title, "$\\nu =$", phi, ", $\\sigma^2 =$",sigma2)))
pl
}
n <- 4
p1 <- n.realizations(n, xx, sigma2s[1], vs.matern[1], cov.model = "matern", kappa = 2, title = "Matern realizations")
p1 <- n.realizations(n, xx, sigma2s[1], vs.matern[1], cov.model = "matern", kappa = 2, title = "Matern realizations")
p1
n.realizations <- function(n, xx, sigma2, phi, cov.model, kappa = 2, title = "title"){
# Create covariance matrix
cov.matrix = cov.matr(xx, xx, sigma2, phi, cov.model, kappa)
# Expected value
mu = rep(0, length(xx))
# Draw from multivariate normal
draw <- MASS::mvrnorm(n = n, mu = mu, Sigma = cov.matrix)
# Transform the data
draw <- t(draw)
draw <- cbind(xx, draw)
observations <- Reduce(rbind, lapply(2:ncol(draw), function(col) cbind(draw[,c(1, col)], col)))
observations <- as.data.frame(observations)
colnames(observations) <- c("x", "observed_value", "trial")
observations$trial <- as.factor(observations$trial)
# Plot the data
pl <- ggplot()
pl <- pl + geom_line(data = observations, aes(x = x, y = observed_value, color = trial)) + ggtitle(TeX(paste(title, "$\\nu =$", phi, ", $\\sigma^2 =$",sigma2)))
pl
}
n <- 4
p1 <- n.realizations(n, xx, sigma2s[1], vs.matern[1], cov.model = "matern", kappa = 2, title = "Matern realizations")
p1
n.realizations <- function(n, xx, sigma2, phi, cov.model, kappa = 2, title = "title"){
# Create covariance matrix
cov.matrix = cov.matr(xx, xx, sigma2, phi, cov.model, kappa)
# Expected value
mu = rep(0, length(xx))
# Draw from multivariate normal
draw <- MASS::mvrnorm(n = n, mu = mu, Sigma = cov.matrix)
# Transform the data
draw <- t(draw)
draw <- cbind(xx, draw)
observations <- Reduce(rbind, lapply(2:ncol(draw), function(col) cbind(draw[,c(1, col)], col)))
observations <- as.data.frame(observations)
colnames(observations) <- c("x", "observed_value", "trial")
observations$trial <- as.factor(observations$trial)
# Plot the data
pl <- ggplot()
pl <- pl + geom_line(data = observations, aes(x = x, y = observed_value, color = trial)) + ggtitle(TeX(paste(title, "$\\nu =$", phi, ", $\\sigma^2 =$",sigma2)))
pl
}
n <- 4
p1 <- n.realizations(n, xx, sigma2s[1], vs.matern[1], cov.model = "matern", kappa = 2, title = "Matern realizations, with:")
p2 <- n.realizations(n, xx, sigma2s[1], vs.matern[2], cov.model = "matern", kappa = 2, title = "Matern realizations, with:")
p3 <- n.realizations(n, xx, sigma2s[2], vs.matern[1], cov.model = "matern", kappa = 2, title = "Matern realizations, with:")
p4 <- n.realizations(n, xx, sigma2s[2], vs.matern[2], cov.model = "matern", kappa = 2, title = "Matern realizations, with:")
p5 <- n.realizations(n, xx, sigma2s[1], vs.exponential[1], cov.model = "exponential", kappa = 2, title = "Powered exponential realizations, with:")
p6 <- n.realizations(n, xx, sigma2s[1], vs.exponential[2], cov.model = "exponential", kappa = 2, title = "Powered exponential, with:")
p7 <- n.realizations(n, xx, sigma2s[2], vs.exponential[1], cov.model = "exponential", kappa = 2, title = "Powered exponential, with:")
p8 <- n.realizations(n, xx, sigma2s[2], vs.exponential[2], cov.model = "exponential", kappa = 2, title = "Powered exponential, with:")
?ggarrange
?ggarrange
library(ggpubr)
ggarrange(p1,p2, p3, p4, p5, p6, p7, p8, ncol=2, widths = c(1,1), heights = c(1,1))
ggarrange(p1,p2, p3, p4, p5, p6, p7, p8, ncol=2, widths = c(1,1), heights = c(1,1), nrow = 4)
ggarrange(p1,p2, p3, p4, p5, p6, p7, p8, ncol=2, widths = c(1,1), heights = c(1,1), nrow = 4, label.x = c("a)", "b)", "c)", "d)", "e)","f)", "g)", "h)"))
p1 <- n.realizations(n, xx, sigma2s[1], vs.matern[1], cov.model = "matern", kappa = 2, title = "a) Matern realizations, with:")
p2 <- n.realizations(n, xx, sigma2s[1], vs.matern[2], cov.model = "matern", kappa = 2, title = "b) Matern realizations, with:")
p3 <- n.realizations(n, xx, sigma2s[2], vs.matern[1], cov.model = "matern", kappa = 2, title = "c) Matern realizations, with:")
p4 <- n.realizations(n, xx, sigma2s[2], vs.matern[2], cov.model = "matern", kappa = 2, title = "d) Matern realizations, with:")
p5 <- n.realizations(n, xx, sigma2s[1], vs.exponential[1], cov.model = "exponential", kappa = 2, title = "e) Powered exponential realizations, with:")
p6 <- n.realizations(n, xx, sigma2s[1], vs.exponential[2], cov.model = "exponential", kappa = 2, title = "f) Powered exponential, with:")
p7 <- n.realizations(n, xx, sigma2s[2], vs.exponential[1], cov.model = "exponential", kappa = 2, title = "g) Powered exponential, with:")
p8 <- n.realizations(n, xx, sigma2s[2], vs.exponential[2], cov.model = "exponential", kappa = 2, title = "h) Powered exponential, with:")
ggarrange(p1,p2, p3, p4, p5, p6, p7, p8, ncol=2, widths = c(1,1), heights = c(1,1), nrow = 4, label.x = c("a)", "b)", "c)", "d)", "e)","f)", "g)", "h)"))
ggarrange(p1,p2, p3, p4, p5, p6, p7, p8, ncol=2, widths = c(1,1), heights = c(1,1), nrow = 4)
install.packages("latex2exp")
seismic <- read.csv("seismic.dat")
seismic
seismic <- read.csv("seismic.dat", header = F)
seismic
seismic <- read.csv("seismic.dat", header = F)
seismic <- read.csv("seismic.dat", header = F)
setwd("~/GitHub/Spatial-Statistics-Project1/Exercise 3")
seismic <- read.csv("seismic.dat", header = F)
seismic
complit <- read.csv("complit.dat")
complit
65*65
length(seismic)
nrow(seismic)
