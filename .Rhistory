observations <- as.data.frame(observations)
colnames(observations) <- c("x", "observed_value", "trial")
observations$trial <- as.factor(observations$trial)
points(observations$x, observations$observed_value, col = rgb(1,1,1,0.25))
points(observations$x, observations$observed_value, col = rgb(0,1,0,0.25))
plot(x = xx, y = mu.l.d., ylim = c(-5, 5))
points(x = xx, y = min.90, col = "red")
points(xx, max.90, col = "red")
points(observations$x, observations$observed_value, col = rgb(0,1,0,0.25))
sigma_e_2 <- 0 # Observation error
sigma2 <- 5
phi <- 10
kappa <- 2
cov.model <- "matern"
dd = c(10, 25, 30)
mu.d = rep(0, length(dd))
mu.l = rep(0, length(xx))
sigma.ll= cov.matr(xx,xx, sigma2, phi, cov.model, kappa)
sigma.dd = cov.matr(dd, dd, sigma2, phi, cov.model, kappa) + observation_error(dd, sigma_e_2)
sigma.ld = cov.matr(xx, dd, sigma2, phi, cov.model, kappa)
sigma.dl = t(sigma.ld)
sigma.l.d = sigma.ll - sigma.ld %*% solve(sigma.dd) %*% sigma.dl
draw <- MASS::mvrnorm(n = 100, mu = mu.l, Sigma = sigma.l.d)
draw <- t(draw)
draw <- cbind(xx, draw)
observations <- Reduce(rbind, lapply(2:ncol(draw), function(col) cbind(draw[,c(1, col)], col)))
observations <- as.data.frame(observations)
colnames(observations) <- c("x", "observed_value", "trial")
observations$trial <- as.factor(observations$trial)
plot(x = xx, y = mu.l.d., ylim = c(-5, 5))
points(x = xx, y = min.90, col = "red")
points(xx, max.90, col = "red")
points(observations$x, observations$observed_value, col = rgb(0,1,0,0.25))
draw <- MASS::mvrnorm(n = 100, mu = mu.l.d, Sigma = sigma.l.d)
draw <- t(draw)
draw <- MASS::mvrnorm(n = 100, mu = mu.l.d., Sigma = sigma.l.d)
draw <- t(draw)
draw <- cbind(xx, draw)
observations <- Reduce(rbind, lapply(2:ncol(draw), function(col) cbind(draw[,c(1, col)], col)))
observations <- as.data.frame(observations)
colnames(observations) <- c("x", "observed_value", "trial")
observations$trial <- as.factor(observations$trial)
plot(x = xx, y = mu.l.d., ylim = c(-5, 5))
points(x = xx, y = min.90, col = "red")
points(xx, max.90, col = "red")
points(observations$x, observations$observed_value, col = rgb(0,1,0,0.25))
sigma_e_2 <- 0 # Observation error
sigma2 <- 5
phi <- 10
cov.model <- "matern"
kappa <- 2
mu.d = rep(0, length(dd))
mu.l = rep(0, length(xx))
sigma.ll= cov.matr(xx,xx, sigma2, phi, cov.model, kappa)
sigma.dd = cov.matr(dd, dd, sigma2, phi, cov.model, kappa) + observation_error(dd, sigma_e_2)
sigma.dl = t(sigma.ld)
dd = c(10, 25, 30)
sigma.l.d = sigma.ll - sigma.ld %*% solve(sigma.dd) %*% sigma.dl
sigma.ld = cov.matr(xx, dd, sigma2, phi, cov.model, kappa)
mu.l.d. = mu.l + sigma.ld %*% solve(sigma.dd) %*% (ddy-mu.d)
c = qnorm(p = 0.95)
variances = diag(sigma.l.d)
variances[variances < 1e-12] = 0
min.90 = mu.l.d. - c*sqrt(variances)
max.90 = mu.l.d. + c*sqrt(variances)
min.90 <- as.vector(min.90)
max.90 <- as.vector(max.90)
plot(x = xx, y = mu.l.d., ylim = c(-5, 5))
points(x = xx, y = min.90, col = "red")
points(xx, max.90, col = "red")
abline(v=dd[1], lty = 2)
abline(v=dd[2], lty = 2)
abline(v=dd[3], lty = 2)
draw <- MASS::mvrnorm(n = 100, mu = mu.l.d., Sigma = sigma.l.d)
draw <- t(draw)
draw <- cbind(xx, draw)
observations <- Reduce(rbind, lapply(2:ncol(draw), function(col) cbind(draw[,c(1, col)], col)))
observations <- as.data.frame(observations)
colnames(observations) <- c("x", "observed_value", "trial")
observations$trial <- as.factor(observations$trial)
plot(x = xx, y = mu.l.d., ylim = c(-5, 5))
points(x = xx, y = min.90, col = "red")
points(xx, max.90, col = "red")
points(observations$x, observations$observed_value, col = rgb(0,1,0,0.25))
abline(v=dd[1], lty = 2)
abline(v=dd[2], lty = 2)
abline(v=dd[3], lty = 2)
# Problem 1e)
sigma_e_2 <- .25 # Observation error
sigma2 <- 5
phi <- 10
cov.model <- "matern"
kappa <- 2
dd = c(10, 25, 30)
mu.d = rep(0, length(dd))
mu.l = rep(0, length(xx))
sigma.ll= cov.matr(xx,xx, sigma2, phi, cov.model, kappa)
sigma.dd = cov.matr(dd, dd, sigma2, phi, cov.model, kappa) + observation_error(dd, sigma_e_2)
sigma.ld = cov.matr(xx, dd, sigma2, phi, cov.model, kappa)
sigma.dl = t(sigma.ld)
sigma.l.d = sigma.ll - sigma.ld %*% solve(sigma.dd) %*% sigma.dl
mu.l.d. = mu.l + sigma.ld %*% solve(sigma.dd) %*% (ddy-mu.d)
c = qnorm(p = 0.95)
variances = diag(sigma.l.d)
variances[variances < 1e-12] = 0
min.90 = mu.l.d. - c*sqrt(variances)
max.90 = mu.l.d. + c*sqrt(variances)
min.90 <- as.vector(min.90)
max.90 <- as.vector(max.90)
draw <- MASS::mvrnorm(n = 100, mu = mu.l.d., Sigma = sigma.l.d)
draw <- t(draw)
draw <- cbind(xx, draw)
observations <- Reduce(rbind, lapply(2:ncol(draw), function(col) cbind(draw[,c(1, col)], col)))
observations <- as.data.frame(observations)
colnames(observations) <- c("x", "observed_value", "trial")
observations$trial <- as.factor(observations$trial)
plot(x = xx, y = mu.l.d., ylim = c(-5, 5))
points(x = xx, y = min.90, col = "red")
points(xx, max.90, col = "red")
points(observations$x, observations$observed_value, col = rgb(0,1,0,0.25))
abline(v=dd[1], lty = 2)
abline(v=dd[2], lty = 2)
abline(v=dd[3], lty = 2)
## Calculating percentage points inside:
observations$inside_min_max_90 = observations$x > min.90 & observations$x < max.90
observations$inside_min_max_90
# Problem 1e)
sigma_e_2 <- 0 # Observation error
sigma2 <- 5
phi <- 10
cov.model <- "matern"
mu.d = rep(0, length(dd))
mu.l = rep(0, length(xx))
kappa <- 2
sigma.ll= cov.matr(xx,xx, sigma2, phi, cov.model, kappa)
sigma.ld = cov.matr(xx, dd, sigma2, phi, cov.model, kappa)
dd = c(10, 25, 30)
sigma.dl = t(sigma.ld)
sigma.dd = cov.matr(dd, dd, sigma2, phi, cov.model, kappa) + observation_error(dd, sigma_e_2)
sigma.l.d = sigma.ll - sigma.ld %*% solve(sigma.dd) %*% sigma.dl
mu.l.d. = mu.l + sigma.ld %*% solve(sigma.dd) %*% (ddy-mu.d)
c = qnorm(p = 0.95)
variances = diag(sigma.l.d)
variances[variances < 1e-12] = 0
min.90 = mu.l.d. - c*sqrt(variances)
max.90 = mu.l.d. + c*sqrt(variances)
min.90 <- as.vector(min.90)
max.90 <- as.vector(max.90)
draw <- MASS::mvrnorm(n = 100, mu = mu.l.d., Sigma = sigma.l.d)
draw <- t(draw)
draw <- cbind(xx, draw)
observations <- Reduce(rbind, lapply(2:ncol(draw), function(col) cbind(draw[,c(1, col)], col)))
observations <- as.data.frame(observations)
colnames(observations) <- c("x", "observed_value", "trial")
observations$trial <- as.factor(observations$trial)
plot(x = xx, y = mu.l.d., ylim = c(-5, 5))
points(x = xx, y = min.90, col = "red")
points(xx, max.90, col = "red")
points(observations$x, observations$observed_value, col = rgb(0,1,0,0.25))
abline(v=dd[1], lty = 2)
abline(v=dd[2], lty = 2)
abline(v=dd[3], lty = 2)
observations$x
observations
## Calculating percentage points inside:
observations$inside_min_max_90 = observations$observed_value > min.90 & observations$observed_value < max.90
observations
mean(observations$inside_min_max_90)
diag(sigma.l.d)
## Chance posterior over 2
mu <- mu.l.d.
variances <- diag(sigma.l.d)
pnorm(2, mean = mu, sd = sqrt(variances))
pnorm(2, mean = mu, sd = sqrt(variances), lower.tail = F)
lines(xx, probs)
probs <- pnorm(2, mean = mu, sd = sqrt(variances), lower.tail = F) # TODO: Sqrt here or not?
lines(xx, probs)
probs <- probs * plot.height + plot.min
## Chance posterior over 2
plot.height <- 10
plot.min <- -5
probs <- probs * plot.height + plot.min
lines(xx, probs)
plot(x = xx, y = mu.l.d., ylim = c(-5, 5))
points(x = xx, y = min.90, col = "red")
points(xx, max.90, col = "red")
points(observations$x, observations$observed_value, col = rgb(0,1,0,0.25))
abline(v=dd[1], lty = 2)
abline(v=dd[2], lty = 2)
abline(v=dd[3], lty = 2)
## Calculating percentage points inside:
observations$inside_min_max_90 = observations$observed_value > min.90 & observations$observed_value < max.90
mean(observations$inside_min_max_90)
## Chance posterior over 2
plot.height <- 10
plot.min <- -5
mu <- mu.l.d.
variances <- diag(sigma.l.d)
probs <- pnorm(2, mean = mu, sd = sqrt(variances), lower.tail = F) # TODO: Sqrt here or not?
probs <- probs * plot.height + plot.min
lines(xx, probs)
# Problem 1e)
sigma_e_2 <- .25 # Observation error
sigma2 <- 5
phi <- 10
cov.model <- "matern"
dd = c(10, 25, 30)
mu.l = rep(0, length(xx))
sigma.ll= cov.matr(xx,xx, sigma2, phi, cov.model, kappa)
sigma.dd = cov.matr(dd, dd, sigma2, phi, cov.model, kappa) + observation_error(dd, sigma_e_2)
kappa <- 2
mu.d = rep(0, length(dd))
sigma.ld = cov.matr(xx, dd, sigma2, phi, cov.model, kappa)
sigma.dl = t(sigma.ld)
sigma.l.d = sigma.ll - sigma.ld %*% solve(sigma.dd) %*% sigma.dl
mu.l.d. = mu.l + sigma.ld %*% solve(sigma.dd) %*% (ddy-mu.d)
c = qnorm(p = 0.95)
variances = diag(sigma.l.d)
variances[variances < 1e-12] = 0
min.90 = mu.l.d. - c*sqrt(variances)
max.90 = mu.l.d. + c*sqrt(variances)
min.90 <- as.vector(min.90)
max.90 <- as.vector(max.90)
draw <- MASS::mvrnorm(n = 100, mu = mu.l.d., Sigma = sigma.l.d)
draw <- t(draw)
draw <- cbind(xx, draw)
observations <- Reduce(rbind, lapply(2:ncol(draw), function(col) cbind(draw[,c(1, col)], col)))
observations <- as.data.frame(observations)
colnames(observations) <- c("x", "observed_value", "trial")
observations$trial <- as.factor(observations$trial)
plot(x = xx, y = mu.l.d., ylim = c(-5, 5))
points(x = xx, y = min.90, col = "red")
points(xx, max.90, col = "red")
points(observations$x, observations$observed_value, col = rgb(0,1,0,0.25))
abline(v=dd[1], lty = 2)
abline(v=dd[2], lty = 2)
abline(v=dd[3], lty = 2)
## Calculating percentage points inside:
observations$inside_min_max_90 = observations$observed_value > min.90 & observations$observed_value < max.90
mean(observations$inside_min_max_90)
## Chance posterior over 2
plot.height <- 10
plot.min <- -5
mu <- mu.l.d.
variances <- diag(sigma.l.d)
probs <- pnorm(2, mean = mu, sd = sqrt(variances), lower.tail = F) # TODO: Sqrt here or not?
probs <- probs * plot.height + plot.min
lines(xx, probs)
abline(h = 2)
# Problem 1e)
sigma_e_2 <- 0 # Observation error
sigma2 <- 5
phi <- 10
cov.model <- "matern"
kappa <- 2
dd = c(10, 25, 30)
mu.d = rep(0, length(dd))
mu.l = rep(0, length(xx))
sigma.ll= cov.matr(xx,xx, sigma2, phi, cov.model, kappa)
sigma.ld = cov.matr(xx, dd, sigma2, phi, cov.model, kappa)
sigma.dl = t(sigma.ld)
sigma.l.d = sigma.ll - sigma.ld %*% solve(sigma.dd) %*% sigma.dl
sigma.dd = cov.matr(dd, dd, sigma2, phi, cov.model, kappa) + observation_error(dd, sigma_e_2)
mu.l.d. = mu.l + sigma.ld %*% solve(sigma.dd) %*% (ddy-mu.d)
c = qnorm(p = 0.95)
variances = diag(sigma.l.d)
variances[variances < 1e-12] = 0
min.90 = mu.l.d. - c*sqrt(variances)
min.90 <- as.vector(min.90)
max.90 <- as.vector(max.90)
max.90 = mu.l.d. + c*sqrt(variances)
draw <- MASS::mvrnorm(n = 100, mu = mu.l.d., Sigma = sigma.l.d)
draw <- t(draw)
draw <- cbind(xx, draw)
observations <- Reduce(rbind, lapply(2:ncol(draw), function(col) cbind(draw[,c(1, col)], col)))
colnames(observations) <- c("x", "observed_value", "trial")
observations <- as.data.frame(observations)
observations$trial <- as.factor(observations$trial)
plot(x = xx, y = mu.l.d., ylim = c(-5, 5))
points(x = xx, y = min.90, col = "red")
points(xx, max.90, col = "red")
points(observations$x, observations$observed_value, col = rgb(0,1,0,0.25))
abline(v=dd[1], lty = 2)
abline(v=dd[2], lty = 2)
abline(v=dd[3], lty = 2)
## Calculating percentage points inside:
observations$inside_min_max_90 = observations$observed_value > min.90 & observations$observed_value < max.90
mean(observations$inside_min_max_90)
## Chance posterior over 2
plot.height <- 10
plot.min <- -5
mu <- mu.l.d.
variances <- diag(sigma.l.d)
probs <- pnorm(2, mean = mu, sd = sqrt(variances), lower.tail = F) # TODO: Sqrt here or not?
probs <- probs * plot.height + plot.min
lines(xx, probs)
abline(h = 2)
observations$over_2 <- as.factor(observations$over_2)
## TODO: Use integrate to find close to theoretical value of A_r
# Check if point over 2:
observations$over_2 <- observations$observed_value > 2
observations$over_2 <- as.factor(observations$over_2)
observations$over_2
a_r.est <- mean(observations$over_2)*nrow(observations)
a_r.est
## TODO: Use integrate to find close to theoretical value of A_r
# Check if point over 2:
observations$over_2 <- observations$observed_value > 2
a_r.est <- mean(observations$over_2)*nrow(observations)
a_r.est
mean(observations$over_2)
a_r.est <- mean(observations$over_2)*50 # Points are equally spread out so placement does not matter
a_r.est
# Look at each x
library(dplyr)
observations %>% group_by(x) %>% summarise(mean(over_2))
observations
grouped_over_2 <- observations %>% group_by(x) %>% summarise(mean(over_2))
grouped_over_2
grouped_over_2 <- observations %>% group_by(x) %>% summarise(perc_over_2 = mean(over_2))
plot(grouped_over_2$x, grouped_over_2$perc_over_2)
sum(grouped_over_2$perc_over_2)
a_r.est
plot(grouped_over_2$x, grouped_over_2$perc_over_2*plot.height + plot.min)
plot(x = xx, y = mu.l.d., ylim = c(-5, 5))
points(x = xx, y = min.90, col = "red")
points(xx, max.90, col = "red")
points(observations$x, observations$observed_value, col = rgb(0,1,0,0.25))
abline(v=dd[1], lty = 2)
abline(v=dd[2], lty = 2)
abline(v=dd[3], lty = 2)
## Calculating percentage points inside:
observations$inside_min_max_90 = observations$observed_value > min.90 & observations$observed_value < max.90
mean(observations$inside_min_max_90)
## Chance posterior over 2
plot.height <- 10
plot.min <- -5
mu <- mu.l.d.
variances <- diag(sigma.l.d)
probs <- pnorm(2, mean = mu, sd = sqrt(variances), lower.tail = F) # TODO: Sqrt here or not?
probs <- probs * plot.height + plot.min
lines(xx, probs)
abline(h = 2)
## TODO: Use integrate to find close to theoretical value of A_r
# Check if point over 2:
observations$over_2 <- observations$observed_value > 2
a_r.est <- mean(observations$over_2)*50 # Points are equally spread out so placement does not matter
observations$over_2 <- as.factor(observations$over_2)
# Look at each x
library(dplyr)
grouped_over_2 <- observations %>% group_by(x) %>% summarise(perc_over_2 = mean(over_2))
lines(grouped_over_2$x, grouped_over_2$perc_over_2*plot.height + plot.min, col="blue")
# Look at each x
library(dplyr)
grouped_over_2 <- observations %>% group_by(x) %>% summarise(perc_over_2 = mean(over_2))
warning()
grouped_over_2 <- observations %>% group_by(x) %>% summarise(perc_over_2 = mean(over_2))
grouped_over_2
## TODO: Use integrate to find close to theoretical value of A_r
# Check if point over 2:
observations$over_2 <- observations$observed_value > 2
observations
a_r.est <- mean(observations$over_2)*50 # Points are equally spread out so placement does not matter
a_r.est
observations$over_2 <- as.factor(observations$over_2)
# Look at each x
library(dplyr)
grouped_over_2 <- observations %>% group_by(x) %>% summarise(perc_over_2 = mean(over_2))
grouped_over_2
# Problem 1e)
sigma_e_2 <- 0 # Observation error
sigma2 <- 5
phi <- 10
cov.model <- "matern"
kappa <- 2
dd = c(10, 25, 30)
mu.d = rep(0, length(dd))
mu.l = rep(0, length(xx))
sigma.ll= cov.matr(xx,xx, sigma2, phi, cov.model, kappa)
sigma.dd = cov.matr(dd, dd, sigma2, phi, cov.model, kappa) + observation_error(dd, sigma_e_2)
sigma.ld = cov.matr(xx, dd, sigma2, phi, cov.model, kappa)
sigma.dl = t(sigma.ld)
sigma.l.d = sigma.ll - sigma.ld %*% solve(sigma.dd) %*% sigma.dl
mu.l.d. = mu.l + sigma.ld %*% solve(sigma.dd) %*% (ddy-mu.d)
c = qnorm(p = 0.95)
variances = diag(sigma.l.d)
variances[variances < 1e-12] = 0
min.90 = mu.l.d. - c*sqrt(variances)
max.90 = mu.l.d. + c*sqrt(variances)
min.90 <- as.vector(min.90)
max.90 <- as.vector(max.90)
draw <- MASS::mvrnorm(n = 100, mu = mu.l.d., Sigma = sigma.l.d)
draw <- t(draw)
draw <- cbind(xx, draw)
observations <- Reduce(rbind, lapply(2:ncol(draw), function(col) cbind(draw[,c(1, col)], col)))
observations <- as.data.frame(observations)
colnames(observations) <- c("x", "observed_value", "trial")
observations$trial <- as.factor(observations$trial)
plot(x = xx, y = mu.l.d., ylim = c(-5, 5))
points(x = xx, y = min.90, col = "red")
points(xx, max.90, col = "red")
points(observations$x, observations$observed_value, col = rgb(0,1,0,0.25))
abline(v=dd[1], lty = 2)
abline(v=dd[2], lty = 2)
abline(v=dd[3], lty = 2)
## Calculating percentage points inside:
observations$inside_min_max_90 = observations$observed_value > min.90 & observations$observed_value < max.90
mean(observations$inside_min_max_90)
## Chance posterior over 2
plot.height <- 10
plot.min <- -5
mu <- mu.l.d.
variances <- diag(sigma.l.d)
probs <- pnorm(2, mean = mu, sd = sqrt(variances), lower.tail = F) # TODO: Sqrt here or not?
probs <- probs * plot.height + plot.min
lines(xx, probs)
abline(h = 2)
## TODO: Use integrate to find close to theoretical value of A_r
# Check if point over 2:
observations$over_2 <- observations$observed_value > 2
a_r.est <- mean(observations$over_2)*50 # Points are equally spread out so placement does not matter
observations$over_2 <- as.factor(observations$over_2)
# Look at each x
library(dplyr)
grouped_over_2 <- observations %>% group_by(x) %>% summarise(perc_over_2 = mean(over_2))
grouped_over_2
observations
# Problem 1e)
sigma_e_2 <- 0 # Observation error
sigma2 <- 5
phi <- 10
cov.model <- "matern"
kappa <- 2
dd = c(10, 25, 30)
mu.d = rep(0, length(dd))
mu.l = rep(0, length(xx))
sigma.ll= cov.matr(xx,xx, sigma2, phi, cov.model, kappa)
sigma.dd = cov.matr(dd, dd, sigma2, phi, cov.model, kappa) + observation_error(dd, sigma_e_2)
sigma.ld = cov.matr(xx, dd, sigma2, phi, cov.model, kappa)
sigma.dl = t(sigma.ld)
sigma.l.d = sigma.ll - sigma.ld %*% solve(sigma.dd) %*% sigma.dl
mu.l.d. = mu.l + sigma.ld %*% solve(sigma.dd) %*% (ddy-mu.d)
c = qnorm(p = 0.95)
variances = diag(sigma.l.d)
variances[variances < 1e-12] = 0
min.90 = mu.l.d. - c*sqrt(variances)
max.90 = mu.l.d. + c*sqrt(variances)
min.90 <- as.vector(min.90)
max.90 <- as.vector(max.90)
draw <- MASS::mvrnorm(n = 100, mu = mu.l.d., Sigma = sigma.l.d)
draw <- t(draw)
draw <- cbind(xx, draw)
observations <- Reduce(rbind, lapply(2:ncol(draw), function(col) cbind(draw[,c(1, col)], col)))
observations <- as.data.frame(observations)
observations$trial <- as.factor(observations$trial)
plot(x = xx, y = mu.l.d., ylim = c(-5, 5))
colnames(observations) <- c("x", "observed_value", "trial")
points(x = xx, y = min.90, col = "red")
points(xx, max.90, col = "red")
points(observations$x, observations$observed_value, col = rgb(0,1,0,0.25))
abline(v=dd[1], lty = 2)
abline(v=dd[2], lty = 2)
abline(v=dd[3], lty = 2)
## Calculating percentage points inside:
observations$inside_min_max_90 = observations$observed_value > min.90 & observations$observed_value < max.90
mean(observations$inside_min_max_90)
## Chance posterior over 2
plot.height <- 10
plot.min <- -5
mu <- mu.l.d.
variances <- diag(sigma.l.d)
probs <- pnorm(2, mean = mu, sd = sqrt(variances), lower.tail = F) # TODO: Sqrt here or not?
probs <- probs * plot.height + plot.min
lines(xx, probs)
abline(h = 2)
## TODO: Use integrate to find close to theoretical value of A_r
# Check if point over 2:
observations$over_2 <- observations$observed_value > 2
a_r.est <- mean(observations$over_2)*50 # Points are equally spread out so placement does not matter
# Look at each x
library(dplyr)
grouped_over_2 <- observations %>% group_by(x) %>% summarise(perc_over_2 = mean(over_2))
lines(grouped_over_2$x, grouped_over_2$perc_over_2*plot.height + plot.min, col="blue")
sum(grouped_over_2$perc_over_2)
plot(x = xx, y = mu.l.d., ylim = c(-5, 5))
points(x = xx, y = min.90, col = "red")
points(xx, max.90, col = "red")
points(observations[observations$over_2,]$x, observations[observations$over_2,]$observed_value, col = rgb(0,0,1,0.25))
points(observations[!observations$over_2,]$x, observations[!observations$over_2,]$observed_value, col = rgb(0,1,0,0.25))
abline(v=dd[1], lty = 2)
abline(v=dd[2], lty = 2)
abline(v=dd[3], lty = 2)
lines(xx, probs)
abline(h = 2)
# Look at each x
library(dplyr)
grouped_over_2 <- observations %>% group_by(x) %>% summarise(perc_over_2 = mean(over_2))
lines(grouped_over_2$x, grouped_over_2$perc_over_2*plot.height + plot.min, col="blue")
# Each sample is a bernoulli trial with p given by x (either blue or black line)
# Each sample thus have variance p(1-p)
# p_hat_i = (Xi1 + ... + Xi100) / 100
# => var p_hat_i = sum(var(X_i1))/100 = p_hat_i*(1-p_hat_i)
# hat A = sum(p_hat_1, p_hat_2, p_hat_3, ... p_hat_50)
# => var(hat_A) = sum(p_hat_i*(1-p_hat_i))
p.hat.i = grouped_over_2$perc_over_2
p.hat.i
var.p.hat.i = p.hat.i * (1-p.hat.i)
var.A.hat = sum(var.p.hat.i)
var.A.hat
# Alternative method
A.hat.V2 <- sum(mu.l.d. > 2)
A.hat.V2
